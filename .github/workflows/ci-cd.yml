name: ferdi-ci-cd

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  K8S_NAMESPACE: ferdi
  HOSTNAME: fmt.145-133-88-88.sslip.io
  ACR_LOGIN_SERVER: ferdiacruksouth.azurecr.io

jobs:
  build-auth:
    name: Build & Push Images (auth, backend/auth)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - uses: docker/build-push-action@v6
        with:
          context: backend/auth
          file: backend/auth/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.ACR_LOGIN_SERVER }}/ironhack.final.project:auth-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-discounts:
    name: Build & Push Images (discounts, backend/discounts)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - uses: docker/build-push-action@v6
        with:
          context: backend/discounts
          file: backend/discounts/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.ACR_LOGIN_SERVER }}/ironhack.final.project:discounts-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-items:
    name: Build & Push Images (items, backend/items)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - uses: docker/build-push-action@v6
        with:
          context: backend/items
          file: backend/items/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.ACR_LOGIN_SERVER }}/ironhack.final.project:items-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-client:
    name: Build & Push Images (client, client)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
        with:
          driver: docker-container
      - if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}
      - uses: docker/build-push-action@v6
        with:
          context: client
          file: client/Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ env.ACR_LOGIN_SERVER }}/ironhack.final.project:client-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
